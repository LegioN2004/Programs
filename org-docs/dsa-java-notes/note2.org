* First java program input/output debugging and datatypes
** structure of a java file
*** every file that ends with an extensions .java is a class itself; eg: main.java
*** since it's name is main.java(or something before .java) it should contain a class with that name (as in before the extension) in the file itself
*** all the code that we'll be writing will be in this class main/name
*** remember if a variable name starts with a capital letter then it is a class name (by convention)
*** if the class with the name of the file is in the file then that will be a class of the public type , in this case main is the public class type
**** public class means that this class will be accessible by all other files , classes, etc
*** like cpp , java also has a main function (by convention) from where the program starts
**** function is a block/collection of code which can be used again and again
*** you can run with javac _name_.java and then java _name_ (where name is the class as well as the file name) , also while running the executable with java you can use the name only to run
** explanation of the main.java file
<s public class main { // inside this block of {} is the int main of java as found in cpp
	public static void main(String[] args) {
		System.out.println("hello world!!");
	}
}
>
*** here class is name group of properties and functions , in the above eg's class we have this function 
	<s public static void main(String[] args) {
		System.out.println("hello world!!");
	}
>
*** all the functions that are in the classes are knows as methods
*** also the function name has to be main only <s public static void main(String[] args) > it is reserved to be here if it is not main it will not run
*** here public means the same as the class name <s public static void main(String[] args) > " does it not make sense to make it available to be executed from anywhere
*** here static means
